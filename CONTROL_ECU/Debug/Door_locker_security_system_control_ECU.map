Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./twi.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./control_ecu.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./control_ecu.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

pass                0x5               ./control_ecu.o
pass_verf           0x5               ./control_ecu.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./buzzer.o
LOAD ./control_ecu.o
LOAD ./dc_motor.o
LOAD ./external_eeprom.o
LOAD ./gpio.o
LOAD ./pwm.o
LOAD ./timer1.o
LOAD ./twi.o
LOAD ./uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x10de
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./buzzer.o
 .text          0x00000092        0x0 ./control_ecu.o
 .text          0x00000092        0x0 ./dc_motor.o
 .text          0x00000092        0x0 ./external_eeprom.o
 .text          0x00000092        0x0 ./gpio.o
 .text          0x00000092        0x0 ./pwm.o
 .text          0x00000092        0x0 ./timer1.o
 .text          0x00000092        0x0 ./twi.o
 .text          0x00000092        0x0 ./uart.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.Buzzer_init
                0x00000092       0x22 ./buzzer.o
                0x00000092                Buzzer_init
 .text.Buzzer_on
                0x000000b4       0x18 ./buzzer.o
                0x000000b4                Buzzer_on
 .text.Buzzer_off
                0x000000cc       0x18 ./buzzer.o
                0x000000cc                Buzzer_off
 .text.main     0x000000e4      0x216 ./control_ecu.o
                0x000000e4                main
 .text.DcMotor_init
                0x000002fa       0x36 ./dc_motor.o
                0x000002fa                DcMotor_init
 .text.DcMotor_Rotate
                0x00000330       0x6c ./dc_motor.o
                0x00000330                DcMotor_Rotate
 .text.EEPROM_writeByte
                0x0000039c       0x82 ./external_eeprom.o
                0x0000039c                EEPROM_writeByte
 .text.EEPROM_readByte
                0x0000041e       0xc0 ./external_eeprom.o
                0x0000041e                EEPROM_readByte
 .text.GPIO_setupPinDirection
                0x000004de      0x1d6 ./gpio.o
                0x000004de                GPIO_setupPinDirection
 .text.GPIO_writePin
                0x000006b4      0x1d6 ./gpio.o
                0x000006b4                GPIO_writePin
 .text.GPIO_readPin
                0x0000088a      0x13e ./gpio.o
                0x0000088a                GPIO_readPin
 .text.GPIO_setupPortDirection
                0x000009c8       0x88 ./gpio.o
                0x000009c8                GPIO_setupPortDirection
 .text.GPIO_writePort
                0x00000a50       0x88 ./gpio.o
                0x00000a50                GPIO_writePort
 .text.GPIO_readPort
                0x00000ad8       0x98 ./gpio.o
                0x00000ad8                GPIO_readPort
 .text.Timer0_PWM_init
                0x00000b70       0x34 ./pwm.o
                0x00000b70                Timer0_PWM_init
 .text.__vector_9
                0x00000ba4       0x66 ./timer1.o
                0x00000ba4                __vector_9
 .text.__vector_7
                0x00000c0a       0x66 ./timer1.o
                0x00000c0a                __vector_7
 .text.Timer1_init
                0x00000c70       0x9c ./timer1.o
                0x00000c70                Timer1_init
 .text.Timer1_deInit
                0x00000d0c       0x1c ./timer1.o
                0x00000d0c                Timer1_deInit
 .text.Timer1_setCallBack
                0x00000d28       0x24 ./timer1.o
                0x00000d28                Timer1_setCallBack
 .text.TWI_init
                0x00000d4c       0x6c ./twi.o
                0x00000d4c                TWI_init
 .text.TWI_start
                0x00000db8       0x20 ./twi.o
                0x00000db8                TWI_start
 .text.TWI_stop
                0x00000dd8       0x16 ./twi.o
                0x00000dd8                TWI_stop
 .text.TWI_writeByte
                0x00000dee       0x2e ./twi.o
                0x00000dee                TWI_writeByte
 .text.TWI_readByteWithACK
                0x00000e1c       0x26 ./twi.o
                0x00000e1c                TWI_readByteWithACK
 .text.TWI_readByteWithNACK
                0x00000e42       0x26 ./twi.o
                0x00000e42                TWI_readByteWithNACK
 .text.TWI_getStatus
                0x00000e68       0x1e ./twi.o
                0x00000e68                TWI_getStatus
 .text.UART_init
                0x00000e86       0xec ./uart.o
                0x00000e86                UART_init
 .text.UART_sendByte
                0x00000f72       0x2e ./uart.o
                0x00000f72                UART_sendByte
 .text.UART_recieveByte
                0x00000fa0       0x1e ./uart.o
                0x00000fa0                UART_recieveByte
 .text.UART_sendString
                0x00000fbe       0x52 ./uart.o
                0x00000fbe                UART_sendString
 .text.UART_receiveString
                0x00001010       0x86 ./uart.o
                0x00001010                UART_receiveString
 .text.libgcc   0x00001096       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00001096                __udivmodsi4
 .text.libgcc   0x000010da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000010da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000010da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000010da                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000010da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000010da                exit
                0x000010da                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000010da        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000010de                _etext = .

.data           0x00800060        0xc load address 0x000010de
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./buzzer.o
 .data          0x00800060        0x0 ./control_ecu.o
 .data          0x00800060        0x0 ./dc_motor.o
 .data          0x00800060        0x0 ./external_eeprom.o
 .data          0x00800060        0x0 ./gpio.o
 .data          0x00800060        0x0 ./pwm.o
 .data          0x00800060        0x0 ./timer1.o
 .data          0x00800060        0x0 ./twi.o
 .data          0x00800060        0x0 ./uart.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.config_twi
                0x00800060        0x5 ./control_ecu.o
                0x00800060                config_twi
 .data.config_uart
                0x00800065        0x7 ./control_ecu.o
                0x00800065                config_uart
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006c                . = ALIGN (0x2)
                0x0080006c                _edata = .
                0x0080006c                PROVIDE (__data_end, .)

.bss            0x0080006c        0xc
                0x0080006c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080006c        0x0 ./buzzer.o
 .bss           0x0080006c        0x0 ./control_ecu.o
 .bss           0x0080006c        0x0 ./dc_motor.o
 .bss           0x0080006c        0x0 ./external_eeprom.o
 .bss           0x0080006c        0x0 ./gpio.o
 .bss           0x0080006c        0x0 ./pwm.o
 .bss           0x0080006c        0x0 ./timer1.o
 .bss           0x0080006c        0x0 ./twi.o
 .bss           0x0080006c        0x0 ./uart.o
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.callback_ptr
                0x0080006c        0x2 ./timer1.o
                0x0080006c                callback_ptr
 *(COMMON)
 COMMON         0x0080006e        0xa ./control_ecu.o
                0x0080006e                pass
                0x00800073                pass_verf
                0x00800078                PROVIDE (__bss_end, .)
                0x000010de                __data_load_start = LOADADDR (.data)
                0x000010ea                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800078        0x0
                0x00800078                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800078                PROVIDE (__noinit_end, .)
                0x00800078                _end = .
                0x00800078                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1efc
 *(.stab)
 .stab          0x00000000      0x27c ./buzzer.o
 .stab          0x0000027c      0x4d4 ./control_ecu.o
                                0x570 (size before relaxing)
 .stab          0x00000750      0x210 ./dc_motor.o
                                0x2e8 (size before relaxing)
 .stab          0x00000960      0x318 ./external_eeprom.o
                                0x3f0 (size before relaxing)
 .stab          0x00000c78      0x738 ./gpio.o
                                0x810 (size before relaxing)
 .stab          0x000013b0      0x1a4 ./pwm.o
                                0x42c (size before relaxing)
 .stab          0x00001554      0x2f4 ./timer1.o
                                0x540 (size before relaxing)
 .stab          0x00001848      0x33c ./twi.o
                                0x5c4 (size before relaxing)
 .stab          0x00001b84      0x378 ./uart.o
                                0x630 (size before relaxing)

.stabstr        0x00000000     0x1187
 *(.stabstr)
 .stabstr       0x00000000     0x1187 ./buzzer.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Door_locker_security_system_control_ECU.elf elf32-avr)
LOAD linker stubs
